{
    "collab_server" : "",
    "contents" : "FighterOpponents <- function(name, df){\n  winner <- filter(df, winner == name) %>%\n    rename(fighter = winner, opponent = loser)\n  loser  <- filter(df, loser == name) %>%\n    rename(fighter = loser, opponent = winner)\n  total  <- rbind(winner, loser) %>%\n    arrange(date)\n  as.character(total$opponent)\n}\n\nFighterWinPct <- function(name, df){\n  df <- filter(df, method != \"Draw\", method != \"Draw - Majority\",\n               method != \"Draw - Split\", method != \"No Contest\")\n  nrow(filter(df, winner == name)) / (nrow(filter(df, winner == name)) + \n                                        nrow(filter(df, loser == name)))\n}\n\nFighterOppWinPct <- function(name, df){\n  opponents <- FighterOpponents(name, df)\n  df2 <- filter(df, winner != name, loser != name)\n  opp.wpct <- as.vector(sapply(opponents, FighterWinPct, df2))\n  opp.wpct[is.na(opp.wpct)] <- 0\n  sum(opp.wpct) / length(opp.wpct)\n}\n\nFighterOppOppWinPct <- function(name, df){\n  opponents <- FighterOpponents(name, df)\n  opp.opp.wpct <- as.vector(sapply(opponents, FighterOppWinPct, df))\n  opp.opp.wpct[is.na(opp.opp.wpct)] <- 0\n  sum(opp.opp.wpct) / length(opp.opp.wpct)\n}\n\nFighterNumFights <- function(name, df){\n  winner <- filter(df, winner == name) %>%\n    rename(fighter = winner, opponent = loser)\n  loser  <- filter(df, loser == name) %>%\n    rename(fighter = loser, opponent = winner)\n  nrow(rbind(winner, loser))\n}\n\nFighterRPI <- function(name, df, weight1 = 0.25, weight2 = 0.5, weight3 = 0.25){\n  win.pct <- FighterWinPct(name, df)\n  opp.wpct <- FighterOppWinPct(name, df)\n  oop.wpct <- FighterOppOppWinPct(name, df)\n  win.pct * weight1 + opp.wpct * weight2 + oop.wpct * weight3\n}\n\nFighterLastFight <- function(name, df){\n  winner <- filter(df, winner == name) %>%\n    rename(fighter = winner, opponent = loser)\n  loser  <- filter(df, loser == name) %>%\n    rename(fighter = loser, opponent = winner)\n  total  <- rbind(winner, loser)\n  max(total$date)\n}\n\nDivRPI <- function(year.start, year.end = 9999, weight,\n                   weight1 = 0.25, weight2 = 0.5, weight3 = 0.25){\n  df <- filter(ufc, year >= year.start, year <= year.end, weight.class.id == weight)\n  fighter <- as.vector(unique(c(as.character(df$winner), as.character(df$loser))))\n  rpi <- as.vector(sapply(fighter, FighterRPI, df, weight1, weight2, weight3))\n  num.fights <- as.vector(sapply(fighter, FighterNumFights, df))\n  last.fight <- as.vector(sapply(fighter, FighterLastFight, df))\n  new.df <- data.frame(fighter, num.fights, last.fight, rpi)\n  new.df$last.fight <- as.Date(new.df$last.fight, origin = \"1970-01-01\")\n  new.df$adj.rpi <- ifelse(new.df$num.fights < 5, new.df$rpi - .5 ^ new.df$num.fights,\n                           new.df$rpi)\n  rownames(new.df) <- c()\n  arrange(new.df, desc(adj.rpi))\n}\n\nFiboVector <- function(len){\n  fibvals <- numeric(len)\n  fibvals[1] <- 1\n  fibvals[2] <- 1\n  for (i in 3:len) { \n    fibvals[i] <- fibvals[i-1]+fibvals[i-2]\n  } \n  fibvals\n}\n\n### TINKER BOX ###\nAdjFighterWinPct <- function(name, df, split){\n  fight.range <- seq(min(df$year), max(df$year))\n  early.range <- fight.range[1 : split]\n  late.range  <- fight.range[(split + 1) : length(fight.range)]\n  df <- filter(df, method != \"Draw\", method != \"Draw - Majority\",\n               method != \"Draw - Split\", method != \"No Contest\", \n               winner == name | loser == name)\n  if (nrow(df) == 0) {\n    return(0)\n  }\n  early.df <- filter(df, year >= min(early.range), year <= max(early.range))\n  late.df  <- filter(df, year >= min(late.range), year <= max(late.range))\n  early.wins <- ifelse(nrow(early.df) == 0, 0,\n                       nrow(filter(early.df, winner == name)))\n  early.fights <- early.wins + ifelse(nrow(early.df) == 0, 0, \n                                      nrow(filter(early.df, loser == name)))\n  late.wins <- ifelse(nrow(late.df) == 0, 0,\n                      nrow(filter(late.df, winner == name)))\n  late.fights <- late.wins + ifelse(nrow(late.df) == 0, 0, \n                                    nrow(filter(late.df, loser == name)))\n  (1 * early.wins + 4 * late.wins) / (1 * early.fights + 4 * late.fights)\n}\n\nAdjFighterOppWinPct <- function(name, df, split){\n  opponents <- FighterOpponents(name, df)\n  df2 <- filter(df, winner != name, loser != name)\n  opp.wpct <- as.vector(sapply(opponents, AdjFighterWinPct, df2, split))\n  opp.wpct[is.na(opp.wpct)] <- 0\n  sum(opp.wpct) / length(opp.wpct)\n}\n\nAdjFighterOppOppWinPct <- function(name, df, split){\n  opponents <- FighterOpponents(name, df)\n  opp.opp.wpct <- as.vector(sapply(opponents, AdjFighterOppWinPct, df, split))\n  opp.opp.wpct[is.na(opp.opp.wpct)] <- 0\n  sum(opp.opp.wpct) / length(opp.opp.wpct)\n}\n\nAdjFighterRPI <- function(name, df, split = 3, \n                          weight1 = 0.25, weight2 = 0.5, weight3 = 0.25){\n  win.pct <- AdjFighterWinPct(name, df, split)\n  opp.wpct <- AdjFighterOppWinPct(name, df, split)\n  oop.wpct <- AdjFighterOppOppWinPct(name, df, split)\n  win.pct * weight1 + opp.wpct * weight2 + oop.wpct * weight3\n}\n\nAdjDivRPI <- function(year.start, year.end = 9999, weight, split = 3,\n                   weight1 = 0.25, weight2 = 0.5, weight3 = 0.25){\n  df <- filter(ufc, year >= year.start, year <= year.end, weight.class.id == weight)\n  fighter <- as.vector(unique(c(as.character(df$winner), as.character(df$loser))))\n  rpi <- as.vector(sapply(fighter, AdjFighterRPI, df, split, weight1, weight2, weight3))\n  num.fights <- as.vector(sapply(fighter, FighterNumFights, df))\n  last.fight <- as.vector(sapply(fighter, FighterLastFight, df))\n  new.df <- data.frame(fighter, num.fights, last.fight, rpi)\n  new.df$last.fight <- as.Date(new.df$last.fight, origin = \"1970-01-01\")\n  new.df$adj.rpi <- ifelse(new.df$num.fights < 5, new.df$rpi - .5 ^ new.df$num.fights,\n                           new.df$rpi)\n  rownames(new.df) <- c()\n  arrange(new.df, desc(adj.rpi))\n}\n\nAdjRPI.feather <- AdjDivRPI(year.start = 2012, year.end = 2018, weight = 6, split = 2)\nAdjRPI.feather2 <- AdjDivRPI(year.start = 2012, year.end = 2018, weight = 6, split = 2)\nAdjRPI.feather3 <- AdjDivRPI(year.start = 2012, year.end = 2018, weight = 6, split = 2,\n                             weight1 = 0.5, weight2 = 0.25, weight3 = 0.25)",
    "created" : 1504282805357.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "444937840",
    "id" : "44EFBD0B",
    "lastKnownWriteTime" : 1504889298,
    "last_content_update" : 1504889298338,
    "path" : "~/Documents/UFC RPI/UFCRpi.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}